import { Network } from "./network";
export declare class Address {
    private arr;
    constructor(address?: string, throwErrors?: boolean);
    bytes(): number[];
    setBytes(bytes: number[]): this;
    destroy(): this;
    isValid(): boolean;
    is6to4(): boolean;
    isIPv4(): boolean;
    isIPv6(): boolean;
    isLinkLocal(): boolean;
    isLoopback(): boolean;
    isMulticast(): boolean;
    isTeredo(): boolean;
    toString(): string;
    toNetwork(): Network;
    duplicate(): Address;
    lessThan(address: Address): boolean;
    lessThanOrEqual(address: Address): boolean;
    equals(address: Address): boolean;
    greaterThanOrEqual(address: Address): boolean;
    greaterThan(address: Address): boolean;
    compare(address: Address): 0 | 1 | -1 | null;
    applySubnetMask(cidr: number): this;
    isBaseAddress(cidr: number): boolean;
    increase(cidr: number, throwErrors?: boolean): this;
    decrease(cidr: number, throwErrors?: boolean): this;
    next(throwErrors?: boolean): this;
    previous(throwErrors?: boolean): this;
    private offsetAddress;
}
