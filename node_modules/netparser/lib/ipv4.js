"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.randomNetwork = exports.randomAddress = exports.bytesToAddr = void 0;
const errors = __importStar(require("./errors"));
const weight = __importStar(require("./weight"));
const network_1 = require("./network");
const address_1 = require("./address");
function bytesToAddr(bytes, throwErrors) {
    if (bytes.length === 4)
        return `${bytes[0]}.${bytes[1]}.${bytes[2]}.${bytes[3]}`;
    if (throwErrors)
        throw errors.BytesNotFourElements;
    return null;
}
exports.bytesToAddr = bytesToAddr;
function randomAddress() {
    return bytesToAddr(Array.from(Array(4), () => Math.floor(Math.random() * 256)));
}
exports.randomAddress = randomAddress;
const choices = Array.from(Array(31), (_, idx) => new weight.WeightedValue(Math.pow(2, idx), idx + 1));
function randomNetwork() {
    const bytes = Array.from(Array(4), () => Math.floor(Math.random() * 256));
    const addr = new address_1.Address().setBytes(bytes);
    const cidr = weight.getValue(choices);
    return new network_1.Network().from(addr, cidr);
}
exports.randomNetwork = randomNetwork;
//# sourceMappingURL=ipv4.js.map